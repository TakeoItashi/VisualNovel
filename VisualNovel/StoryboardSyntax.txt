##Panel {
##
##		Name: "[Name of the Panel";		Used Internally. HAs no effect on the Game
##
##		BGIndex: [Index of the Background Image];	Background Image Index -> See ImageImports.txt
##		
##		Condition (Optional) {
##			
##			DataValue {
##				
##				Name: [Name of the DataValue];
##				Type: [Type of the DataValue; { trigger, variable, decimal, text } ];
##				Value: [Value that triggers the Condition];
##				Action: [Action that should take place in the condition Check; { isSmaller, isEqual, isBigger, } ];
##			}
##			
##			Alternative {
##				Name: "[Name of the alternative Panel that gets shown if thé condition is not met]";
##			}
##		}
##		
##		Sprites {
##			##TODO Einen identifier (Index oder Name) für die Sprites definieren, den man für die SpritePositions benutzen kann
##			Sprite: [Index in the Image File of the Sprite];	Any number of Sprites can be used
##		}
##		
##		EntryBranch: "[Name of the Branch that should be shown first];
##
##		Branches {
##			Branch {
##				Name: "Unique Name of the Branch";
##				Text: "[Name of the Character]", "[Text Shown in the Textbox]", [SpritePosition], { undetermined amount of SpritePositions};		Any number of Sprite Positions can be used
##				## Sprite Position Syntax: [Sprite Index; The Index is the one from the Sprite Bracket, not from the Image File] ( [Position on X-Axis, Position on Y-Axis] )
##				## Example: "2(70,400)"  			
##				[Undetermined number of Texts]
##				Continue (Optional) {
##					Type: [ContinueType; { Branch, Split, Panel } ];
##					Split {
##						Option {
##							Name: [Name of the ContinueOption];
##							Text: "[The Text that gets shown on the Button]";
##							Sprite: [Index of the Button Sprite in the SpriteImports File];
##							Continue {
##								Type: [ContinueType; For now only Branch and Panel];
##								Name: "[Name of the continuePoint, that should be changed to]";
##							}					
##						}
##						[Undetermined number of Options]
##					}
##				}
##			}
##			[Undetermined number of Branches]
##		}
##		
##		Animation_Placeholder {
##	
##		}	
##}